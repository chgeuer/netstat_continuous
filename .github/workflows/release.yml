name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        type: string
        default: 'v0.1.0'

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: netstat_continuous

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Build Release Binary
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          strip target/x86_64-unknown-linux-gnu/release/${{ env.BINARY_NAME }}

      - name: Create Release and Upload Asset
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Determine the tag name
          TAG_NAME="${{ github.event_name == 'push' && github.ref_name || inputs.version }}"
          
          # Create tag if running manually
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            git tag $TAG_NAME
            git push origin $TAG_NAME
          fi

          # Create release
          gh release create "$TAG_NAME" \
            --title "Release $TAG_NAME" \
            --notes "Release $TAG_NAME" \
            --repo "${{ github.repository }}"

          # Upload binary with the correct file name
          cd target/x86_64-unknown-linux-gnu/release/
          mv "${{ env.BINARY_NAME }}" "${{ env.BINARY_NAME }}-linux-x64"
          gh release upload "$TAG_NAME" "${{ env.BINARY_NAME }}-linux-x64" \
            --repo "${{ github.repository }}" \
            --clobber